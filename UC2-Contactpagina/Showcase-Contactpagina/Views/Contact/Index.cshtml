@model Contactform
@{
ViewData["Title"] = "Contactpagina";
}


<div class="container">

    <h1 id="content-gpdr-consent-status"></h1>

    <div class="content-gdpr-not-chosen hide">
        <p>Deze content wordt alleen getoond als gdrp consent niet is gekozen.</p>
    </div>

    <div class="content-gdpr-accept hide">
        

        <div class="page">
            <section class="contact">

                <h1>Contact</h1>
                <p>@ViewBag.Message</p>
                @if (TempData["message"] != null)
                {
                <p class="alert alert-success">@TempData["message"]</p>
                }
                <form method="post" class="form-contactpagina">

                    <div class="form-contactpagina__inputelement fx-col">
                        <label for="firstname">Voornaam: </label>
                        <input type="text" asp-for="FirstName" name="firstname" id="firstname" required>
                    </div>

                    <div class="form-contactpagina__inputelement fx-col">
                        <label for="lastname">Achternaam: </label>
                        <input type="text" asp-for="LastName" name="lastname" id="lastname" required>
                    </div>

                    <div class="form-contactpagina__inputelement fx-col">
                        <label for="email">E-mailadres: </label>
                        <input type="email" asp-for="Email" name="email" id="email">
                    </div>

                    <div class="form-contactpagina__inputelement fx-col">
                        <label for="phone">Telefoonnummer: </label>
                        <input type="tel" asp-for="Phone" name="phone" id="phone" required>
                    </div>

                    <div class="g-recaptcha" data-sitekey="6LdsMuEqAAAAANuY1M3PysgX-FxPgGy8sRUOmIeD"></div>
                    <div class="form-contactpagina__inputelement" style="display: flex; justify-content: space-between;">
                        <input type="reset" value="Reset"/>
                        <input type="submit" value="Verstuur!">
                    </div>

                </form>

            </section>
        </div>

        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
        <script>
            const inputEmail = document.getElementById('email');
            
            @*const validateEmail = () => {
                if (inputEmail.validity.typeMismatch) {
                    inputEmail.setCustomValidity("Voer een geldig e-mailadres in!");
                    inputEmail.reportValidity();
                } else if (inputEmail.value.length > 80) {
                    inputEmail.setCustomValidity("Email moet niet langer dan 80 tekens zijn!");
                } else {
                    inputEmail.setCustomValidity("");
                }
            }*@

            const validateForm = () => {
                validateEmail();
            }

            // Event listener voor email
            // Aanbevolen events voor formulieren: https://github.com/Windesheim-HBO-ICT/client_studenten/blob/main/lessen/week-2/les-1/form-constraint-validation-api/studentversie/events-voor-invoer-validatie.md
            inputEmail.addEventListener("blur", validateEmail);
            inputEmail.addEventListener("input", validateEmail);

            // Selecteer het formelement
            const form = document.querySelector('.form-contactpagina');



            // Event listener for form submission
            form.addEventListener('submit', function (event) {
                event.preventDefault(); // Always prevent default first

                // Validate all fields
                validateForm();

                // Get CSRF token from the form
                const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Serialize form data
                const formData = new URLSearchParams();
                formData.append('email', form.email.value);
                formData.append('__RequestVerificationToken', csrfToken); // Add CSRF token

                // Perform POST request
                fetch('/contact', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded' // Set content type
                    },
                    body: formData // Send serialized form data as the body
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text();
                    })
                    .then(data => {
                        // Handle successful form submission
                        console.log('Form successfully submitted:', data);
                        form.reset(); // Reset form after successful submission
                        // Optionally: You can redirect or show a success message here
                    })
                    .catch(error => {
                        console.error('There was a problem with the form submission:', error);
                        alert(error.message);
                    });
            });


        </script>


    </div>

    <div class="content-gdpr-reject hide">
        <p>Deze content wordt alleen getoond als gdrp is verworpen.</p>
    </div>

    <section class="gdpr-consent hide">

        <div class="gdpr-consent__description">
            <p>
                Deze website gebruikt cookies.
                We gebruiken cookies om content te personaliseren, voor social media en het analyseren
                van verkeer op de website, advertenties.
            </p>
        </div>

        <div class="gdpr-consent__choice">
            <button class="gdpr-consent__button--accept">Ja, natuurlijk</button>
            <button class="gdpr-consent__button--reject">Neu, misschien later</button>
        </div>

    </section>
</div>